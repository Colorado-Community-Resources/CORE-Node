version: '3'
services:
  nebula:
    restart: always
    image: cryptorado/nebula:v1.1.0
    volumes:
      - "./config:/etc/nebula:ro"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
      - "${CRYPTORADO_NEBULA_PORT}:4242/udp"
    command: ["nebula", "-config", "${CRYPTORADO_NEBULA_CONFIG}"]

  ipfs:
    restart: always
    image: cryptorado/go-ipfs:v0.4.23
    volumes:
      - "./ipfs_data:/data/ipfs"
    entrypoint: /bin/sh
    environment:
      IPFS_PROFILE: lowpower
    command:
      - "-c"
      - >-
        /usr/local/bin/start_ipfs daemon
          --migrate=true --mount=false --enable-namesys-pubsub

  ipfs-cluster:
    restart: always
    image: cryptorado/ipfs-cluster:v0.12.1
    network_mode: "service:nebula"
    volumes:
      - "./ipfs_data/ipfs-cluster:/data/ipfs-cluster"
      - "./config/ipfs_cluster_service.json:/ipfs_cluster_service.json:ro"
      - "./config/ipfs_cluster_secret.txt:/ipfs_cluster_secret.txt:ro"
      - "./peerstore_default.txt:/peerstore_default.txt:ro"
      - "./ipfs_data/export:/export:ro"
    entrypoint: /bin/sh
    command:
      - "-c"
      - >-
        if [ ! -f /data/ipfs-cluster/service.json ]; then
          echo "cluster configuration not initialized, initializing";
          ipfs-cluster-service init;

          echo "writing default peerstore file";
          cp /peerstore_default.txt /data/ipfs-cluster/peerstore;
        fi;

        echo "installing our service.json (in case it needs updating)";
        cp /ipfs_cluster_service.json /data/ipfs-cluster/service.json;

        echo "setting secret into service.json";
        CLUSTER_SECRET=$$(cat /ipfs_cluster_secret.txt);
        sed -i "s/CLUSTER_SECRET/$$CLUSTER_SECRET/" /data/ipfs-cluster/service.json;

        echo "ensuring /data/ipfs-cluster is writeable by user";
        chown -R 1000:1000 /data/ipfs-cluster;

        echo "ipfs-cluster is initialized, running";
        /usr/local/bin/entrypoint.sh -d daemon

